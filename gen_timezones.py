#!/usr/bin/env python

import collections
import os
import sys

ZONES_DIR = "/usr/share/zoneinfo/"

def get_tz_string(timezone):
    data = open(timezone, "rb").read().split(b"\n")[-2]
    code = data.decode("utf-8")
    return code

if __name__ == "__main__":

    header =\
"""
#pragma once

/*********************************
 * Generated by gen_timezones.py *
**********************************/

const char * const ntpServer1 = "time.nist.gov";
const char * const ntpServer2 = "time.google.com";
const char * const ntpServer3 = "pool.ntp.org";
"""

    footer =\
"""
void getTZ(TimeZone tz, char * buffer, size_t len) {
    strncpy_P(buffer, (char *) pgm_read_dword(&(timezoneList[static_cast<int>(tz)])), len);
}"""

    entries = {}

    for region in os.scandir(ZONES_DIR):
        if not region.is_dir() or region.name == "posix" or region.name == "right":
            continue
        rn = region.name.replace("-", "_")
        for zone in os.scandir(region):
            if not zone.is_dir():
                nameEnum = (region.name + "_" + zone.name).replace("-", "_").replace("+", "p")
                code = get_tz_string(zone)

                entries[nameEnum] = {
                    "enum": nameEnum,
                    "code": code,
                }

    enum_TZ = "enum TimeZone {"
    arr_TZ_TZC = "// Keep strings to fixed length. Workaround for memory leaks\n"
    arr_TZ_TZC += "// https://github.com/espressif/esp-idf/issues/3046\n"
    arr_TZ_TZC += "const char * timezoneList[] PROGMEM = {"

    first = True
    for k in sorted(entries):

        enumTxt = entries[k]["enum"]
        tzTxt = entries[k]["code"]

        if len(entries[k]["code"]) >= 99:
            print("String too long: " + tzTxt)
            sys.exit(1)

        if (first):
            enum_TZ     += "\n    "        + enumTxt            + " = 0," + (' '*(46-len(enumTxt))) + "// " + tzTxt
            first = False
        else:
            enum_TZ     += "\n    "        + enumTxt            + ","   + (' '*(50-len(enumTxt))) + "// " +  tzTxt
        arr_TZ_TZC      += "\n    \""      + "{:<99}".format(tzTxt) + "\"," + " // " +  enumTxt

    enum_TZ     += "\n};\n"
    arr_TZ_TZC  += "\n};"

    print(header)
    print(enum_TZ)
    print(arr_TZ_TZC)
    print(footer)
